---
title: "class06"
author: "Sawyer (PID: A16335277)"
date: 01/25/24
format: pdf
---

## R Functions

Functions are how we get stuff done. We call functions to do everything useful in R.

One cool thing about R is that it makes writing your own functions comparatively easy.

All functions in R have at least three things:

- A **name** (we get to pick this)
- One or more **input arguments** (the input to our function)
- The **body** (lines of code that do the work)

```{r}
#| eval: false

funname <- function(input1, input2) {
  # The body with R code
}
```

Let's write a silly first function to add two numbers:

```{r}
x <- 5
y <- 1
x + y
```

```{r myfun}
addme <- function(x, y=1) {
  x + y
}
```


```{r}
addme(100, 100)
```

```{r}
addme(10)
```

## Lab for today


Q1. Write a function grade() to determine an overall grade from a vector of student homework
assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an
NA value) this can be used as a score to be potentially dropped. Your final function should be
adquately explained with code comments and be able to work on an example class gradebook
such as this one in CSV format: “https://tinyurl.com/gradeinput”

```{r}
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

```{r}
# we can set null values to 0
student3[is.na(student3)] <- 0
student3
```

```{r}
# we can find the index of the min value
which.min(student1)
```


```{r}
grade <- function(x) {
  # set null values to 0
  x[is.na(x)] <- 0
  
  # eliminate min value and take mean
  mean(x[-which.min(x)])
}
```

```{r}
grade(student1)
grade(student2)
grade(student3)
```

```{r}
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url, row.names = 1)

head(gradebook)
```

```{r}
# apply function across all rows of df
results <- apply(gradebook, 1, grade)
results
```

Q2. Using your grade() function and the supplied gradebook, Who is the top scoring student
overall in the gradebook?

```{r}
# find max score and index
max(results)
which.max(results)
```


Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained
the lowest scores overall?

```{r}
# find hw with lowest total sum of scores, excluding na
which.min(apply(gradebook, 2, sum, na.rm=T))
```

Based on the sums, it looks like hw2 had the lowest scores overall.


Q4. Optional Extension: From your analysis of the gradebook, which homework was most
predictive of overall score (i.e. highest correlation with average grade score)?

```{r}
# Make all (or mask) NA to zero
mask <- gradebook
mask[is.na(mask)] <- 0
# mask
```

We can use the `cor()` function for correlation analysis.

```{r}
cor(mask$hw5, results)
cor(mask$hw3, results)
```

I need to use the `apply()` function to run this analysis over the whole course (i.e. masked gradebook)

```{r}
apply(mask, 2, cor, results)
```

Hw5 seems to have the highest correlation with overall score (results).
